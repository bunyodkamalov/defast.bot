// <auto-generated />
using System;
using Defast.Bot.Persistence.DataContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Defast.Bot.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Defast.Bot.Domain.Entities.Common.IncomingPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CardCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CardName")
                        .HasColumnType("text");

                    b.Property<string>("CashAccount")
                        .HasColumnType("text");

                    b.Property<decimal>("CashSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CashSumFC")
                        .HasColumnType("numeric");

                    b.Property<string>("DocCurrency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DocDate")
                        .HasColumnType("text");

                    b.Property<int?>("DocNum")
                        .HasColumnType("integer");

                    b.Property<string>("DocType")
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("IncomingPayments", (string)null);
                });

            modelBuilder.Entity("Defast.Bot.Domain.Entities.Common.IncomingPaymentAccount", b =>
                {
                    b.Property<Guid?>("IncomingPaymentId")
                        .HasColumnType("uuid");

                    b.Property<string>("AccountCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("SumPaid")
                        .HasColumnType("numeric");

                    b.HasKey("IncomingPaymentId");

                    b.ToTable("IncomingPaymentAccounts", (string)null);
                });

            modelBuilder.Entity("Defast.Bot.Domain.Entities.Common.PaymentInvoice", b =>
                {
                    b.Property<Guid>("IncomingPaymentId")
                        .HasColumnType("uuid");

                    b.Property<int>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<int>("DocNum")
                        .HasColumnType("integer");

                    b.Property<int>("LineNum")
                        .HasColumnType("integer");

                    b.Property<decimal>("SumApplied")
                        .HasColumnType("numeric");

                    b.HasKey("IncomingPaymentId");

                    b.ToTable("PaymentInvoice", (string)null);
                });

            modelBuilder.Entity("Defast.Bot.Domain.Entities.Common.IncomingPaymentAccount", b =>
                {
                    b.HasOne("Defast.Bot.Domain.Entities.Common.IncomingPayment", null)
                        .WithMany("PaymentAccounts")
                        .HasForeignKey("IncomingPaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Defast.Bot.Domain.Entities.Common.PaymentInvoice", b =>
                {
                    b.HasOne("Defast.Bot.Domain.Entities.Common.IncomingPayment", null)
                        .WithMany("PaymentInvoices")
                        .HasForeignKey("IncomingPaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Defast.Bot.Domain.Entities.Common.IncomingPayment", b =>
                {
                    b.Navigation("PaymentAccounts");

                    b.Navigation("PaymentInvoices");
                });
#pragma warning restore 612, 618
        }
    }
}
